@page "/search/{Guid}"
@using Digitalboken.Client.Models
@inject HttpClient Http
@inject NavigationManager NavigationManager

<style>
    *,
    *::before,
    *::after {
      box-sizing: border-box;
    }

    p {
      margin: 0 0 13px 0;
    }

    a {
      color: #fff;
    }

    .center { 
      text-align: center; 
    }

    .container {
      width: 95%;
      max-width: 1220px;
      margin: 0 auto;
      color: #fff;
    }

    .episode {
      display: grid;
      grid-template-columns: 1fr 3fr;
      position: relative;
    }

    .episode_number {
      font-size: 10vw;
      font-weight: 600;
      padding: 10px 0;
      position: sticky;
      top: 0;
      text-align: center;
      height: calc(10vw + 20px);
      transition: all 0.2s ease-in;
    }

    .episode_content {
      border-top: 2px solid #fff;
      display: grid;
      grid-template-columns: 1fr 4fr;
      grid-gap: 10px;
      padding: 15px 0;
    }

    .episode_content .title {
      font-weight: 600
    }

    .episode_content .story {
      line-height: 26px;
    }

    img {
        width: 400px;
        height: 100%;
    }
</style>

@if(Data != null) {
    <div class="container">
      <h1 class="center">@Data.Queries.Request.First().SearchTerms</h1>
        @foreach(var item in Data.Results){
            <article class="episode">
                <div class="episode_number">@GetResultNumber</div>
                <div class="episode_content">
                    <div class="title">
                        @if(item.Pagemap?.CseImage?.FirstOrDefault() != null)
                        {
                            <img src="@item.Pagemap?.CseImage?.FirstOrDefault()?.Src"
                                onerror="this.src='blazor.svg';this.onerror='';">
                        }
                        else
                        {
                            <p>no image</p>
                        }
                    </div>
                    <div class="story">
                        <p><a href="@item.Link">@item.Title</a></p>
                        <p>@item.Snippet</p>
                    </div>
                </div>
            </article>   
            Index++;
        }
    </div>    
}

@code {
    [Parameter]
    public string? Guid { get; set; }
    private Models.Search.Search? Data { get; set; }
    private int Index { get; set; } = 1;

    protected override async Task OnInitializedAsync()
    {
        HttpResponseMessage response = await Http.GetAsync($"api/Search/{Guid}");

        if (response.IsSuccessStatusCode)
            Data = await response.Content.ReadFromJsonAsync<Models.Search.Search>();
        else
            NavigationManager.NavigateTo("/error");
    }

    private string GetResultNumber => Index < 10 ? $"0{Index}" : $"{Index}";
}